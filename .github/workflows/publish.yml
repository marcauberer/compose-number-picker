# Workflow for Android CI release

name: Publish to Sonatype

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: Publish to Sonatype
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false  # Avoids messing up PagesDeployAction

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Checkout Gradle Build Cache
        if: ${{ steps.self_hosted.outputs.FLAG != 'self-hosted' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/wrapper/dists/**/gradle*.zip
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build Debug
        run: ./gradlew app:assembleDebug

      - name: Prepare Keystore and Local
        run: |
          echo "${{ secrets.KEYSTORE }}" > opensource.jks.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch "opensource.jks.asc" > "app/opensource.jks"
          echo "${{ secrets.SIGNING_GRADLE }}" > signing.gradle.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch "signing.gradle.asc" > "app/signing.gradle"
          echo "openSource.signing.file=signing.gradle" >> local.properties

      - name: Build Release
        run: ./gradlew app:assembleStaging app:assembleRelease app:bundleRelease

      - name: Prepare Gradle Publish properties
        run: |
          echo "gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}" >> ~/.gradle/gradle.properties
          echo "gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}" >> ~/.gradle/gradle.properties

      - name: Prepare Sonatype Gradle properties
        run: |
          echo "${{ secrets.SONATYPE_GPG_FILE }}" > opensource.gpg.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch "opensource.gpg.asc" > "$HOME/.gradle/opensource.gpg"
          echo "sonatype.gpg.key=${{ secrets.SONATYPE_GPG_KEY }}" >> ~/.gradle/gradle.properties
          echo "sonatype.gpg.password=${{ secrets.SONATYPE_GPG_PASS }}" >> ~/.gradle/gradle.properties
          echo "sonatype.gpg.secretKeyRingFile=$HOME/.gradle/opensource.gpg" >> ~/.gradle/gradle.properties

      - name: Release to Sonatype
        run: |
          ./gradlew build -x test -x lint
          ./gradlew numberpicker:publishReleasePublicationToSonatypeRepository -Plibrary_only --no-configure-on-demand --no-parallel dokkaHtml
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Collect artifacts
        run: |
          COLLECT_PWD=${PWD}
          mkdir -p "artifacts"
          find . -name "*.apk" -type f -exec cp {} "artifacts" \;
          find . -name "*.aab" -type f -exec cp {} "artifacts" \;

      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "App-Artifacts"
          path: artifacts/*

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/config/configuration.json"
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@91409e712cf565ce9eff10c87a8d1b11b81757ae
        with:
          body: ${{steps.github_release.outputs.changelog}}
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Documentation
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: numberpicker/build/dokka/html
          TARGET_FOLDER: docs
          CLEAN: true